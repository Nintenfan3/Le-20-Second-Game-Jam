public float dashSpeed;
private float dashTime;
public float startDashTime;
private int direction = 0;`enter code here`
//dash amount//
char Dash = 3


public float cooldownTime = 2;
private float nextDashTime = 0;

moveInput = Input.GetAxisRaw("Horizontal");
        rb.velocity = new Vector2(moveInput * speed, rb.velocity.y);

    if (facingRight == false && moveInput > 0)
    {
        Flip();
    }
    else if (facingRight == true && moveInput < 0)
    {
        Flip();
    }
        if (direction == 0)
        {
            if (Input.GetKeyDown(KeyCode.LeftShift))
            {
                if (Input.GetKey(KeyCode.W))
                {
                    direction = 3;
                }
            }
            if (Input.GetKeyDown(KeyCode.LeftShift))
            {
                if (Input.GetKey(KeyCode.D))
                {
                    direction = 2;
                }
            }
            if (Input.GetKeyDown(KeyCode.LeftShift))
            {
                if (Input.GetKey(KeyCode.A))
                {
                    direction = 1;
                }
            }
        }
        else
        {
            if (dashTime <= 0)
            {
                direction = 0;
                dashTime = startDashTime;
                rb.velocity = Vector2.zero;
            }
            else
            {
                dashTime -= Time.deltaTime;
            if (Time.time > nextDashTime) {

                if (direction == 1)
                {
                    rb.velocity = Vector2.left * dashSpeed;
                    nextDashTime = Time.time + cooldownTime;
                }
                else if (direction == 2)
                {
                    rb.velocity = Vector2.right * dashSpeed;
                    nextDashTime = Time.time + cooldownTime;
                }
                else if (direction == 3)
                {
                    rb.velocity = Vector2.up * dashSpeed;
                    nextDashTime = Time.time + cooldownTime;
                }
            }
        }
    }I    }
